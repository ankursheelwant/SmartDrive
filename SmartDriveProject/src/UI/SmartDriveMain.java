/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import BLL.EcoSystem;
import BLL.DB4OUtil.DB4OUtil;
import BLL.Enterprise.Enterprise;
import BLL.Network.Network;
import BLL.Organization.Organization;
import BLL.Role.CityMayor;
import BLL.UserAccount.UserAccount;
import UI.CityMayor.CityMayorFrame;
import ValidatorPackage.Validator;
import java.awt.Color;
import javax.swing.JFrame;

/**
 *
 * @author Ankur
 */
public class SmartDriveMain extends javax.swing.JFrame {

    /**
     * Creates new form SmartDriveMain
     */
    
    public static DB4OUtil dB4OUtil = DB4OUtil.getInstance();
    public static Validator validator;
    public static float hue, saturation, brightness;
    public static int isNetworkAdminAvailable=0;
    public static CityMayorFrame cityMayor;
    
    private EcoSystem system;
    public SmartDriveMain() {
        initComponents();
        validator=new Validator();
        
        system = dB4OUtil.retrieveSystem();
        
        float[] hsbValues = new float[3];
        hsbValues = Color.RGBtoHSB(0,102,153,hsbValues);
        hue = hsbValues[0];
        saturation = hsbValues[1];
        brightness = hsbValues[2];
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        passwordField = new javax.swing.JPasswordField();
        loginBtn = new javax.swing.JButton();
        userNameJTextField = new javax.swing.JTextField();
        headerLabel = new javax.swing.JLabel();
        warningLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Login");
        setBackground(new java.awt.Color(255, 255, 255));

        mainPanel.setBackground(new java.awt.Color(255, 255, 255));

        passwordField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        passwordField.setText("Password");
        passwordField.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        passwordField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                focusGainedToPasswordTextfield(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                focusLostPasswordField(evt);
            }
        });

        loginBtn.setBackground(new java.awt.Color(255, 255, 255));
        loginBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        loginBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/login.jpg"))); // NOI18N
        loginBtn.setToolTipText("Login");
        loginBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginBtnActionPerformed(evt);
            }
        });

        userNameJTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        userNameJTextField.setText("Username");
        userNameJTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                focusGainedToUsernameTextfield(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                usernameTextfieldFocusLost(evt);
            }
        });
        userNameJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userNameJTextFieldActionPerformed(evt);
            }
        });

        headerLabel.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
        headerLabel.setForeground(new java.awt.Color(0, 102, 153));
        headerLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/car.jpg"))); // NOI18N
        headerLabel.setText("Smart Drive");

        warningLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        warningLabel.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(125, 125, 125)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(userNameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(warningLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(headerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(154, 154, 154)
                        .addComponent(loginBtn)))
                .addContainerGap(124, Short.MAX_VALUE))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(headerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(userNameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(warningLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(loginBtn)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loginBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginBtnActionPerformed
        // TODO add your handling code here:
        
        // Get user name
        String userName = userNameJTextField.getText();
        // Get Password
        char[] passwordCharArray = passwordField.getPassword();
        String password = String.valueOf(passwordCharArray);

        //Step1: Check in the system user account directory if you have the user
        UserAccount userAccount = system.getUserAccountDirectory().authenticateUser(userName, password);
        Network inNetwork=null;
        Enterprise inEnterprise = null;
        Organization inOrganization = null;
        if (userAccount == null) {
            //Step2: Go inside each network to check each network
            for (Network network : system.getNetworkList()) {
                userAccount=network.getUserAccountDirectory().authenticateUser(userName, password);
                if(userAccount == null) {
                    //Step 2-a: Check against each enterprise in selected network
                    for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                        userAccount = enterprise.getUserAccountDirectory().authenticateUser(userName, password);
                        if (userAccount == null) {
                            //Step3: Check against each organization inside that enterprise
                            for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                                userAccount = organization.getUserAccountDirectory().authenticateUser(userName, password);
                                if (userAccount != null) {
                                    inEnterprise = enterprise;
                                    inOrganization = organization;
                                    inNetwork=network;
                                    break;
                                }
                            }
                        } 
                        else {
                            inEnterprise = enterprise;
                            inNetwork=network;
                            break;
                        }
                        if (inOrganization != null) {
                            break;
                        }
                    }
                    if (inEnterprise != null) {
                        break;
                    }
                }
                else
                {
                    inNetwork=network;
                    break;
                }
            }
        }

        if (userAccount == null) {
            //JOptionPane.showMessageDialog(null, "Invalid Credentails!");
            warningLabel.setText("*Invalid Credentials");
            return;
        } else {
            warningLabel.setText("");
            //JOptionPane.showMessageDialog(this,"State Gobernor login Done","Done",JOptionPane.INFORMATION_MESSAGE);
            JFrame jf=userAccount.getRole().createWorkArea(userAccount, inOrganization, inEnterprise, inNetwork, system);
            if(userAccount.getRole() instanceof CityMayor)
            {
                cityMayor=(CityMayorFrame)jf;
            }
            userNameJTextField.setText("Username");
            passwordField.setText("Password");
            jf.setVisible(true);
            
        }
        
        
        
        /*this.remove(loginBtn);
        this.remove(loginBtn); 
        this.setSize(600,500);
        SmartDriveMain jf=this;
        JButton jBtn=new JButton("Logout");
        JSplitPane jSplit=new JSplitPane(JSplitPane.VERTICAL_SPLIT);
        
        JPanel jp=new JPanel();
        JPanel jp2=new JPanel();
        jp.setBackground(Color.decode("#2ecc71")); // Sets color
        jp2.setBackground(Color.decode("#356798")); // Sets color
        
        jp.add(jBtn);
        jSplit.setDividerSize(0);
        jSplit.setDividerLocation(150);
        jSplit.setLeftComponent(jp);
        jSplit.setRightComponent(jp2);
        this.setLayout(new BorderLayout());
        this.add(jSplit, BorderLayout.CENTER);
        
        jBtn.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                jf.setSize(300, 200);
                jf.remove(jSplit);
                JButton newLogin=new JButton("Login1");
                newLogin.setSize(5,5);
                JPanel pan=new JPanel();
                pan.add(newLogin);
                jf.add(pan);
                newLogin.addActionListener(new ActionListener() {

                    @Override
                    public void actionPerformed(ActionEvent e) {
                        jf.remove(pan);
                        loginBtnActionPerformed(e);
                    }
                });
            }
        });*/
        
    }//GEN-LAST:event_loginBtnActionPerformed

    private void userNameJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userNameJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userNameJTextFieldActionPerformed

    private void focusGainedToUsernameTextfield(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_focusGainedToUsernameTextfield
        // TODO add your handling code here:
        warningLabel.setText("");
        if(userNameJTextField.getText().equals("Username"))
        {
            userNameJTextField.setText("");
        }
    }//GEN-LAST:event_focusGainedToUsernameTextfield

    private void focusGainedToPasswordTextfield(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_focusGainedToPasswordTextfield
        // TODO add your handling code here:
        warningLabel.setText("");
        char[] pass=passwordField.getPassword();
        if(String.valueOf(pass).equals("Password"))
        {
            passwordField.setText("");
        }
    }//GEN-LAST:event_focusGainedToPasswordTextfield

    private void usernameTextfieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_usernameTextfieldFocusLost
        // TODO add your handling code here:
        if(userNameJTextField.getText().equals("") || userNameJTextField.getText().equalsIgnoreCase("Username"))
        {
            userNameJTextField.setText("Username");
        }
    }//GEN-LAST:event_usernameTextfieldFocusLost

    private void focusLostPasswordField(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_focusLostPasswordField
        // TODO add your handling code here:
        char[] pass=passwordField.getPassword();
        if(String.valueOf(pass).equals("") || String.valueOf(pass).equalsIgnoreCase("Password"))
        {
            passwordField.setText("Password");
        }
    }//GEN-LAST:event_focusLostPasswordField

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SmartDriveMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SmartDriveMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SmartDriveMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SmartDriveMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SmartDriveMain smartDriveMain=new SmartDriveMain();
                smartDriveMain.setVisible(true);
                smartDriveMain.setResizable(false);
                //smartDriveMain.setShape(new RoundRectangle2D.Double(10, 10, 100, 100, 50, 50));
                smartDriveMain.setSize(400,300);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel headerLabel;
    private javax.swing.JButton loginBtn;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JTextField userNameJTextField;
    private javax.swing.JLabel warningLabel;
    // End of variables declaration//GEN-END:variables
}
